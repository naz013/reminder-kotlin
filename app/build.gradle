apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 33
    flavorDimensions "level"
    defaultConfig {
        applicationId 'com.cray.software.justreminder'
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 298
        versionName '9.0.8'
        multiDexEnabled true
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }

    def propsFile = rootProject.file('keystore.properties')
    Properties props = new Properties()
    if (propsFile.exists() && propsFile.canRead()) {
        println '> Property file exist'
        props.load(new FileInputStream(propsFile))
    } else {
        println '> Property file does not exist'
    }

    def shouldSign = props.get('signApk', false)
    println "> Should sign APK = ${shouldSign}"

    if (shouldSign) {
        signingConfigs {
            freeApp {
                storeFile file(props['releaseFreeKeyStoreFile'])
                storePassword props['releaseFreeKeyStorePassword']
                keyAlias props['releaseFreeKeyAlias']
                keyPassword props['releaseFreeKeyPassword']
            }
            proApp {
                storeFile file(props['releaseProKeyStoreFile'])
                storePassword props['releaseProKeyStorePassword']
                keyAlias props['releaseProKeyAlias']
                keyPassword props['releaseProKeyPassword']
            }
            debugApp {
                storeFile file(props['debugKeyStoreFile'])
                storePassword props['debugKeyStorePassword']
                keyAlias props['debugKeyAlias']
                keyPassword props['debugKeyPassword']
            }
        }
    }
    productFlavors {
        free {
            dimension "level"
            applicationId 'com.cray.software.justreminder'
            buildConfigField "boolean", "IS_PRO", "false"

            def api = props.get('freeApiKey', "API_KEY")
            def placesApiKey = props.get('freePlacesApiKey', "\"API_KEY\"")

            println "> API KEY = ${api}"
            println "> PLACES API KEY = ${placesApiKey}"

            buildConfigField "String", "PLACES_API_KEY", "$placesApiKey"
            manifestPlaceholders = [apiKey: api]
        }
        pro {
            dimension "level"
            applicationId 'com.cray.software.justreminderpro'
            buildConfigField "boolean", "IS_PRO", "true"
            versionCode 269

            def api = props.get('proApiKey', "API_KEY")
            def placesApiKey = props.get('proPlacesApiKey', "\"API_KEY\"")
            manifestPlaceholders = [apiKey: api]
            buildConfigField "String", "PLACES_API_KEY", "$placesApiKey"
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            if (shouldSign) {
                productFlavors.free.signingConfig signingConfigs.freeApp
                productFlavors.pro.signingConfig signingConfigs.proApp
            }
        }
        debug {
            minifyEnabled false
            if (shouldSign) {
                signingConfig signingConfigs.debugApp
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    configurations.configureEach {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
        exclude module: 'httpclient'
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    namespace 'com.elementary.tasks'
}

dependencies {
    implementation('com.google.apis:google-api-services-calendar:v3-rev20230406-2.0.0') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation('com.google.apis:google-api-services-tasks:v1-rev20230401-2.0.0')
    implementation 'com.google.http-client:google-http-client-gson:1.43.2'
    implementation('com.google.api-client:google-api-client-android:2.2.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev20230423-2.0.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation project(':voice-engine-ktx')

    implementation 'io.insert-koin:koin-android:3.4.2'
    implementation 'io.insert-koin:koin-android-ext:3.0.2'
    implementation 'io.insert-koin:koin-androidx-workmanager:3.4.2'

    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation "androidx.biometric:biometric:1.1.0"
    implementation 'androidx.core:core-splashscreen:1.0.1'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.0'
    implementation "androidx.activity:activity-ktx:1.7.2"
    implementation "androidx.collection:collection-ktx:1.2.0"
    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'

    implementation('androidx.work:work-runtime:2.8.1') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation('androidx.work:work-runtime-ktx:2.8.1') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.6.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    implementation 'androidx.room:room-runtime:2.5.1'
    implementation 'androidx.room:room-ktx:2.5.1'
    //noinspection KaptUsageInsteadOfKsp
    kapt 'androidx.room:room-compiler:2.5.1'

    implementation "androidx.navigation:navigation-fragment-ktx:2.6.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.6.0"

    implementation "com.google.android.play:core-ktx:1.8.1"

    implementation platform('com.google.firebase:firebase-bom:31.5.0')

    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'

    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'

    freeImplementation 'com.google.android.gms:play-services-ads:22.1.0'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation('com.github.bumptech.glide:glide:4.15.1') {
        exclude group: "com.android.support"
    }
    //noinspection KaptUsageInsteadOfKsp
    kapt 'com.github.bumptech.glide:compiler:4.15.1'
    implementation 'com.tuyenmonkey:mkloader:1.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'
    implementation 'com.dropbox.core:dropbox-core-sdk:5.4.4'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'org.dmfs:lib-recur:0.15.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.github.naz013:ColorSlider:2.0.6'
    implementation 'com.github.naz013:android-calendar-ext:1.0.4'
    implementation 'com.airbnb.android:lottie:6.0.1'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.threeten:threetenbp:1.6.8'
    implementation 'com.maxkeppeler.sheets:core:2.3.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'io.mockk:mockk:1.13.5'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:2.6.1"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    androidTestImplementation 'io.mockk:mockk-android:1.13.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

apply plugin: 'com.google.gms.google-services'
